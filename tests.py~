from data import *
import unittest
import vector_math
from collisions import *
from cast import *

class TestData(unittest.TestCase):
    def test_cast_ray(self):
        myray= Ray(Point(10.0, 0.0, 2.0), Vector(-20.0, 0.0, 0.0))
	mycolor= Color(1.0, 0.0, 0.0)
        myspherelist=[(Sphere(Point(-2.0, 0.0, 2.0), 1.0, mycolor)), (Sphere(Point( 2.0, 0.0, 2.0), 1.0, mycolor))]
        self.assertTrue(cast_ray(myray, myspherelist))
    
    def test_cast_ray2(self):
	mycolor= Color(0.0, 1.0, 0.0)
        self.assertTrue(cast_ray( (Ray(Point(10.0, 0.0, 2.0), Vector(-20.0, 0.0, 0.0))) ,
                                  [(Sphere(Point(-2.0, 0.0, 2.0), 1.0, mycolor)), (Sphere(Point( 2.0, 0.0, 2.0), 1.0, mycolor))] ))

    def test_closest_sphere(self):
	myeye= Point(0,0,0)
	mycolor= Color(0.0, 0.0, 1.0)
	myspherelist=[(Sphere(Point(4.0, 4.0, 4.0), 1.0, mycolor)), (Sphere(Point(2.0, 2.0, 2.0), 1.0, mycolor)), (Sphere(Point( 3.0, 3.0, 3.0), 1.0, mycolor))]    
	self.assertEqual(closest_sphere(myeye, myspherelist),(Sphere(Point(2.0, 2.0, 2.0), 1.0, mycolor))  )
        

if __name__== "__main__":
    unittest.main()
